@model Techbart.DB.EditProductModel

@{
    ViewBag.Title = "Edit";
    var images = new List<Techbart.DB.Image>();

    if (ViewBag.Images != null)
    {
        images = ViewBag.Images;
    }

    var imagenum = 1;
}

@section styles{
    <link href="~/Content/createproduct.css" rel="stylesheet" type="text/css" />
}

<h2>Edit</h2>

<h4>Product</h4>
<hr />
@using (Html.BeginForm("Edit", "Product", FormMethod.Post, htmlAttributes: new { @class = "overflow-hidden", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="col-md-2" id="update"></div>
    <div class="form-horizontal col-md-10">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.AddedDate)


        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			<label class="control-label col-md-2">Product Photos</label>
            <div class="col-md-8">
                @foreach (var image in images)
                {
                    <div class="product-button add-image image@(imagenum)">
                        <label>
                            @Html.ImageHelper(image, Url)
                            <input value="@image.ImageId" type="hidden"/>
                        </label>

                        <a class="icon remove" onclick='removeImage("image@(imagenum)")'></a>
                        <input class="upload-image file" type="file" title="search image" onchange="readURL(this)" id="image@(imagenum)" name="Files[@((imagenum++)-1)]" accept="image/*" />
                    </div>
                }

                @for (var i = images.Count; i < 8; i++)
                {
                    <div class="product-button add-image image@(i+1)">
                        <label for="image@(i+1)">+</label>
                        <input class="upload-image file" type="file" title="search image" onchange="readURL(this)" id="image@(i+1)" name="Files[@(i)]" accept="image/*" />
                    </div>
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script src="~/Scripts/createproduct.js"></script>
    <script src="~/Scripts/editproduct.js"></script>
}